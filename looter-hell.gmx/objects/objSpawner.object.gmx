<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wavelength = 0;
current = 0;
waveend = 0;
smove = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//stop moving all background layers
backgrounds_stop();

smove = 0;

//new blood surface
global.bsurfc++;
global.bsurf[global.bsurfc] = surface_create(room_width,room_height);

//free surfaces that are definitely offscreen
for(var i=0; i&lt;global.bsurfc+1; i++) {
    if (surface_exists(global.bsurf[i])) {
    if (-global.bpos[i] &gt; room_width) surface_free(global.bsurf[i]);
    }
}

//clean up corpses
//with(objCorpse) fade = true;

//spawn this wave of enemies
for(var i=0; i&lt;array_length_2d(global.w_enemies,current); i++) {
    //if position is empty
    if !(instance_position(global.w_positionx[current,i],global.w_positiony[current,i],objEnemy))
    instance_create(global.w_positionx[current,i],global.w_positiony[current,i],global.w_enemies[current,i]);
}

//check if boss wave
if (current == global.w_boss[0]) {
    var b = instance_find(asset_get_index(global.w_boss[1]),0);
    if (b != noone) b.boss = true;
}

//increment current
current++;

//reset timer (if there is a next wave)
if (current &lt; global.numWaves) {
    alarm[1] = global.waves[current,0]*room_speed;
}

waveend = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (smove != 0) {
    
    //SCROLL BACKGROUND IF NOT PAUSED
    if(global.paused == true) {
    alarm_pause(1);
    background_hspeed[global.bg_floor] = 0;
    
    } else background_hspeed[global.bg_floor] = -(0.9*objPlayer.basespeed);
    
    //scroll other background layers accordingly
    for(var i=0; i&lt;8; i++) {
        if(background_visible[i] and i != global.bg_floor) {
        //BEHIND FLOOR
        if (global.bg_floor-i &gt; 0) background_hspeed[i] = (background_hspeed[global.bg_floor]*(0.5/(global.bg_floor-i)));
        //IN FRONT OF FLOOR
        else background_hspeed[i] = (background_hspeed[global.bg_floor] * 1.5*(i-global.bg_floor));
        }
    }
    
    //scroll all blood
    for(var i=0; i&lt;global.bsurfc+1; i++)
    global.bpos[i] += background_hspeed[global.bg_floor];
    
    //scroll corpses
    with(objCorpse) {
        x += background_hspeed[global.bg_floor];
    }
    
}

//check if all enemies defeated
if (instance_number(objEnemy) == 0 and waveend = 0) {
    alarm[1] = room_speed*3;
    waveend = 1;
    
    smove = 1;
    
    //END STAGE
    if (current &gt;= global.numWaves) {
    
    //stop moving all background layers
    backgrounds_stop();
    
    //generate chest rarity
    rand = random(100);
    if (rand &lt;= 5) {chest=sprChest1; chestbonus = 2.5;}
    else if (rand &lt;= 30) {chest=sprChest2; chestbonus = 2;}
    else if (rand &lt;= 60) {chest=sprChest3; chestbonus = 1.5;}
    else {chest=sprChest3; chestbonus = 1;}
    
    ii = instance_create(room_width/2,room_height/2,objChest);
    ii.sprite_index = chest;
    ii.chestbonus = chestbonus;
    
    scrEmptyWaves();
    instance_create((view_wview/2)-128,view_hview/2,objInv);
    
    instance_create(128,(view_hview/2)+16,objEvac);
    instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Show remaining waves
if (current &lt;= global.numWaves) {
    draw_set_font(global.font_menu);
    draw_set_halign(fa_center);
    
    draw_text(display_get_gui_width()/2,64,
    string(current) + " / " + string(global.numWaves));
    
    draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
