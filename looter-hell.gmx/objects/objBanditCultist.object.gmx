<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBanditCultist</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

bossName = load_text("boss-cultist");
hpmax = 4000 * global.stageLevel;
hp = hpmax;
mspeed = 1;
ospeed = mspeed;

state = 0;
shootdir = 0;

image_xscale = -1;
image_speed = 0;

xp = 120;
gold = 80;
metal = irandom_range(5,10);
crystal = irandom_range(15,25);

//SELECT STATE
alarm[8] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bullets = mag;

//NEW PHASE
alarm[8] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (bullets &lt;= 0) alarm[10] = room_speed*reload; else {

    if (global.paused == false and canmove == true) {

    proj = instance_create(x,y,pattern);
    proj.owner = 1;
    proj.type = btype;
    proj.speed = bspeed;
    proj.num = nnum;
    proj.spread = nspread/nnum;
    proj.direction = shootdir;
    
    scrSetProj(proj);
    
    bullets--;
    }
    
    alarm[9] = room_speed/nrate;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//GENERATE NEW STATE
if (state == 1) state = 2;
else state = choose(1,2,3);

//ROTATING BALLS
if (state == 1) {
    damage = scale(15,1,global.stageLevel);
    btype = objCultistEnergy;
    reload = 1;
    mag = 24;
    bullets = mag;
    nrate = 4;
    nnum = 16;
    nspread = 180;
    bspeed = 4;
    pattern = objPattern1;
    
    shootdir = 0;
    
    scrEnemyDiffScale();
    
    //TELEPORT TO CENTER
    x = room_width/2 + 128;
    y = room_height/2;
}

//TELEPORT BURST
if (state == 2 or state == 3) {
    x = irandom_range(room_width/2,room_width-64);
    y = irandom_range(128,room_height-64);
    
    damage = scale(10,1,global.stageLevel);
    btype = objCultistEnergy;
    acc = 50;
    reload = 1;
    mag = 8;
    bullets = mag;
    nrate = 16;
    nnum = 3;
    nspread = 5;
    bspeed = 10;
    pattern = objPattern1;
    
    shootdir = point_direction(x,y,objPlayer.x,objPlayer.y);
    
}

//Pattern 3 is just p2 with spread
if (state == 3) shootdir -= 16;

alarm[9] = room_speed/nrate;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (canmove==true and frozen==false
and distance_to_object(instance_nearest(x,y,objEnemy)) &gt; 128) {
    //move_towards_point(x,objPlayer.y,mspeed);
    speed = 0;
}else speed = 0;

//ROTATE PATTERNS
if (state == 1) shootdir += 8;
if (state == 3) shootdir += 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
