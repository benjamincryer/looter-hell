<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bossName = ""

fire = false;
frozen = false;
corrode = false;
electric = false;

mspeed = 1;
ospeed = mspeed;
boss = false;

canmove = true;
canattack = true;
rate = 1;
lasthit = 0;
recenthits = 0;

body = 0;
chestbonus = 0;

hpmax = 0;
hp = hpmax;
xp = 0;
gold = 0;
metal = 0;
crystal = 0;
hands = 0;

variant = 0;
sprite[0] = sprite_index;

gun_default();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.blood == 0) exit;

//blood amount/size based on kill damage
var blood = ((lasthit * (recenthits)) / hpmax);
if (blood &gt; 3) blood = 3;

var blood_amount = blood * random_range(32,40);
var blood_size = blood * 16;

//SFX
if (blood &lt; 1.5) sfx = choose(sfxEnemyDeath,sfxEnemyDeath2,sfxEnemyDeath3);
else sfx = choose(sfxEnemyExplode,sfxEnemyExplode2);

audio_play_sound(sfx,15,false);

//SCREEN SHAKE
scrShake(blood*3,0.6);

//BIG BLOOD SPLATTER
for (var i=0; i&lt;blood_amount; i++) {
    instance_create(x+random_range(-blood_size,blood_size), y+random_range(-blood_size,blood_size), objBlood);
}

//EXPLODE?
if (blood &gt;= 1.5) {
    var width = sprite_get_width(sprite_index), height = sprite_get_height(sprite_index),
    c_x = x+(width*0.5), c_y = y+(height*0.5),
    i_inc = (width/6), j_inc = (height/6);
    for (var i=0; i&lt;width; i+=i_inc) {
    for (var j=0; j&lt;height; j+=j_inc) {
        with (instance_create(x+i, y+j, objGib)) {
            left = i; top = j; self.width = i_inc; self.height = j_inc; 
            sprite_index = other.sprite_index;
            hspeed = (x - c_x) * 0.1;
            vspeed = (y - c_y) * 0.1;
            gravity = 0.5;
        }
    }}

//CREATE CORPSE
}else{
    var ii = instance_create(x,y,objCorpse);
    ii.sprite_index = sprite_index;
    ii.image_xscale = image_xscale;
    ii.speed = (blood * 6) + random(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>electric = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>corrode = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>frozen = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fire = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//DECREASE RECENT HITS
recenthits -= 0.1;

if (recenthits &lt; 0) recenthits = 0;

//ELEMENT DAMAGE
if (fire == true or corrode == true or electric == true) {
    hp -= elem_dps/room_speed;
}

//ELECTROCUTE NEARBY
if (electric == true) {
    for(var e=0; e&lt;instance_number(objEnemy); e++) {
        ii = instance_find(objEnemy, e);
        if (distance_to_object(ii) &lt; 320) ii.hp -= elem_dps/room_speed;
    }
}

mspeed = ospeed;
if (position_meeting(x,y,objPuddle)) {
mspeed = ospeed/2;
}

//DEATH
if (hp &lt;= 0) {

//drop resources
global.xp += global.bonus_xp * (xp^(global.stageLevel/10));
global.gold += global.bonus_gold * (gold^(global.stageLevel/10));
global.metal += global.bonus_metal * (metal^(global.stageLevel/10));
global.crystal += global.bonus_crystal * (crystal^(global.stageLevel/10));

//chance to drop held gun
/*
if (body != 0) {
    if(round(random(100)) &lt; 50) {
    drop = instance_create(x,y,objGun);
    drop.name = name;
    drop.prefix = "";
    drop.rarity = rarity;
    drop.type = type;
    drop.level = level;
    drop.damage = damage;
    drop.acc = acc;
    drop.rate = rate;
    drop.reload = reload;
    drop.mag = mag;
    drop.bnum = bnum;
    drop.bspeed = bspeed;
    drop.pattern = pattern;
    drop.bspread = bspread;
    drop.element = element;
    drop.elem_dps = elem_dps;
    drop.elem_chance = elem_chance;
    drop.texture = texture;
    drop.body = body;
    drop.barrel = barrel;
    drop.grip = grip;
    drop.stock = stock;
    drop.access = access;
    drop.splits = splits;
    drop.scope = scope;
    drop.burst = burst;
    }
}*/

instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objProjectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.owner == 0) {
//elemental effects
scrElemEffect();

if (corrode == true) {
hp -= (other.damage*1.1); lasthit = other.damage*1.1;
}else{
hp -= other.damage; lasthit = other.damage;
}
recenthits++;

if (other.vampire == 1) {
    global.hp += other.damage/5;
    if (objPlayer.vampire &lt; 5) objPlayer.vampire += 0.5;
}

//BLOOD
if (global.blood != 0) {
    //Floor blood
    instance_create(x+16,y,objBlood);
}

if (other.hit_destroy == true) with(other) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (boss == true) {
draw_set_font(global.font_gui);

draw_healthbar(display_get_gui_width()*0.25, view_hview-32, display_get_gui_width()*0.75, view_hview-8, (100*(hp/hpmax)), c_black, c_red, c_green, 0, true, false);

draw_set_halign(fa_center);
draw_text(display_get_gui_width()*0.5,view_hview-48,bossName)
draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(global.font_stats);

if (fire == true) draw_col = c_red;
else if (frozen == true) draw_col = c_aqua;
else if (electric == true) draw_col = c_blue;
else if (corrode == true) draw_col = c_green;
else draw_col = image_blend;

draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,draw_col,image_alpha);

//if(hp&gt;0) draw_text(x,y-24,string(hp));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
